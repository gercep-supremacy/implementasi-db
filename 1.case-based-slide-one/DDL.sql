CREATE TABLE user(
	id int4 primary key generated by default as identity,
	name varchar(100) not null,
	username varchar(100) not null,
	password varchar(100) not null
);

CREATE TABLE transportation_type(
	id int4 primary key generated by default as identity,
	name varchar(100) not null
);


CREATE TABLE transportation(
	id int4 primary key generated by default as identity,
	name varchar(100) not null,
	type_id int not null,
	foreign key (type_id) references transportation_type(id),
	note varchar(200) not null,
	origin varchar(100) not null,
	destination varchar(100) not null,
	price decimal not null
);

CREATE TABLE tranportation_order(
	id int4 primary key generated by default as identity,
	code varchar(100) not null,
	date datetime not null,
	user_id int4 not null,
	transportation_id int4 not null,
	price decimal not null,
	foreign key (user_id) references user(id)
);

CREATE TABLE payment_method(
	id int4 primary key genreated by default as identity,
	name varchar(100) not null
);

CREATE TABLE tranportation_payment(
	id int4 primary key generated by default as identity,
	transportaion_order_id int4 not null,
	payment_amount decimal not null,
	grand_total decimal not null,
	payment_method_id int4 not null,
	status int4 not null,
	foreign key (transportaion_order_id) references order(id),
	foreign key (payment_method_id) references payment_method(id)
);

CREATE TABLE hotel(
	id int4 primary key generated by default as identity,
	name varchar(100) not null,
	address varchar(300) not null,
	price decimal not null
);

CREATE TABLE hotel_order(
	id int4 primary key generated by default as identity,
	code varchar(100) not null,
	date datetime not null,
	user_id int4 not null,
	hotel_id int4 not null,
	price decimal not null,
	foreign key (user_id) references user(id)
);

CREATE TABLE hotel_payment(
	id int4 primary key generated by default as identity,
	hotel_order_id int4 not null,
	payment_amount decimal not null,
	grand_total decimal not null,
	payment_method_id int4 not null,
	status int4 not null,
	foreign key (hotel_order_id) references order(id),
	foreign key (payment_method_id) references payment_method(id)
);

CREATE TABLE tourist_attractions (
    id int4 primary key generated by default as identity,
    name VARCHAR(100) NOT NULL,
    city VARCHAR(100),
    description TEXT,
    entrance_fee DECIMAL(10, 2)
);

CREATE table tourist_attractions_order(
	id int4 primary key generated by default as identity,
	code varchar(100) not null,
	date datetime not null,
	user_id int4 not null,
	tourist_attractions int4 not null,
	price decimal not null,
	foreign key (user_id) references user(id)
);

CREATE TABLE tourist_attractions_payment(
	id int4 primary key generated by default as identity,
	tourist_attractions_order_id int4 not null,
	payment_amount decimal not null,
	grand_total decimal not null,
	payment_method_id int4 not null,
	status int4 not null,
	foreign key (tourist_attractions_order_id) references order(id),
	foreign key (payment_method_id) references payment_method(id)
);


CREATE TABLE tour_package (
    id int4 primary key generated by default as identity,
    name VARCHAR(100),
    travel_agent VARCHAR(100),
    description TEXT,
    price DECIMAL
);

CREATE table tour_package_order(
	id int4 primary key generated by default as identity,
	code varchar(100) not null,
	date datetime not null,
	user_id int4 not null,
	tour_package_id int4 not null,
	price decimal not null,
	foreign key (user_id) references user(id)
);

CREATE TABLE tour_package_payment(
	id int4 primary key generated by default as identity,
	tour_package_order_id int4 not null,
	payment_amount decimal not null,
	grand_total decimal not null,
	payment_method_id int4 not null,
	status int4 not null,
	foreign key (tour_package_order_id) references order(id),
	foreign key (payment_method_id) references payment_method(id)
);
